@using Ugugushka.Common.Concretes
@model CartCheckoutViewModel
@{
    ViewBag.Title = PageNameDefaults.Checkout.WithDomain();
}

<section class="card my-5 d-flex">
    <div class="card-header d-flex">
        <h1>@PageNameDefaults.Checkout</h1>
    </div>
    @using (Html.BeginForm("Checkout", "Cart", new { }, FormMethod.Post, true, new { @class = "d-flex flex-column" }))
    {
        <div class="d-flex flex-wrap mb-3">
            <div class="d-flex col-12 mb-3 p-0">
                <h2><span>1. </span>Введите свои данные</h2>
            </div>
            @foreach (var property in ViewData.ModelMetadata.Properties)
            {
                @switch (property.PropertyName)
                {
                    case "FirstName":
                    case "LastName":
                    case "PhoneNumber":
                    case "Email":
                        <div class="col-12 col-sm-6 pl-0 pl-sm-1 form-group">
                            <label class="d-block mb-3" for="@property.PropertyName">@(property.DisplayName ?? property.PropertyName)</label>
                            @Html.TextBox(property.PropertyName, null, htmlAttributes: new { @class = "form-control text-input", @placeholder = property.DisplayName })
                            @Html.ValidationMessage(property.PropertyName)
                        </div>
                        break;
                }
            }
        </div>
        <div class="d-flex flex-column mb-3">
            <div class="d-flex mb-3">
                <h2><span>2. </span>Выберите способ доставки</h2>
            </div>
            <div class="d-flex flex-column">
                <label class="d-block mb-3">Способ доставки</label>
                <div class="d-flex align-self-start radio-block">
                    <label class="radio-label" for="bycourier">
                        <input class="d-none" type="radio" id="bycourier" name="DeliveryType" value="0" @(Model.DeliveryType == DeliveryWay.Courier? "checked" : "") href="#bycourier-tab" />
                        <span>курьером</span>
                    </label>
                    <label class="radio-label" for="byself">
                        <input class="d-none" type="radio" id="byself" name="DeliveryType" value="1" @(Model.DeliveryType == DeliveryWay.Pickup? "checked" : "") href="#byself-tab" />
                        <span>самовывоз</span>
                    </label>
                </div>
            </div>
            <div class="d-flex flex-wrap tab-content" id="bycourier-tab">
                <div class="mt-3 mb-4">
                    <strong>Стоимость доставки:</strong> <span class="text-turquoise"><span id="courierPrice">@ViewBag.CourierPrice</span> руб.</span>
                </div>
                @foreach (var property in ViewData.ModelMetadata.Properties)
                {
                    @switch (property.PropertyName)
                    {
                        case "Street":
                            <div class="form-group col-12 pl-0">
                                <label class="d-block mb-3" for="@property.PropertyName">@(property.DisplayName ?? property.PropertyName)</label>
                                @Html.TextBox(property.PropertyName, null, htmlAttributes: new {@class = "form-control text-input", @placeholder = property.DisplayName})
                                @Html.ValidationMessage(property.PropertyName)
                            </div>
                            break;
                        case "HouseNumber":
                        case "ApartmentNumber":
                        case "FloorNumber":
                        case "ExitNumber":
                            <div class="form-group col-12 col-sm-6 pl-0 pl-sm-1">
                                <label class="d-block mb-3" for="@property.PropertyName">@(property.DisplayName ?? property.PropertyName)</label>
                                @Html.TextBox(property.PropertyName, null, htmlAttributes: new {@class = "form-control text-input", @placeholder = property.DisplayName})
                                @Html.ValidationMessage(property.PropertyName)
                            </div>
                            break;
                    }
                }
            </div>
            <div class="tab-content mt-3" id="byself-tab" style="display: none">
                <address class="d-flex"><strong>Адрес самовывоза:</strong>ул. Леонида Беды 39</address>
                <p class="d-flex">
                    <strong class="d-flex mr-2">Время работы:</strong>
                    <span>с <time>10:00</time> до <time>20:00</time></span>
                </p>
            </div>
        </div>
        <div class="d-flex flex-column mb-3">
            <div class="d-flex mb-3">
                <h2><span>3. </span>Проверьте детали заказа</h2>
            </div>
            <div class="d-flex">
                @await Component.InvokeAsync("CartOverview")
            </div>
        </div>
        <div class="d-flex">
            <input class="btn btn-turquoise" type="submit" value="Оформить заказ" />
        </div>
    }
</section>
@section PageScripts
{
    <script src="~/libs/jquery/jquery.min.js" type="text/javascript"></script>
    <script src="~/libs/jquery-validate/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/libs/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        const courierPrice = parseFloat($("#courierPrice")[0].textContent);
        const tableCourierPriceCol = $("#tableCourierPrice")[0];
        const tableCourierPriceRow = $(tableCourierPriceCol.parentNode);
        const tableCourierPrice = $("#tableCourierPrice span")[0];
        const tableTotalValue = $("#tableTotalValue")[0];
        const totalValue = parseFloat(tableTotalValue.textContent); 

        $(document).ready(function() {
            $("input[name='DeliveryType']").on("change", onDeliveryTypeChange);

            switchTab($("input[checked='']")[0].value);
        });

        function onDeliveryTypeChange(e) {
            switchTab(e.target.value);
        }

        function switchTab(value) {
            const isCourier = value === '0';

            $('#bycourier-tab').toggle(isCourier);
            $('#bycourier-tab').toggleClass('d-flex', isCourier);
            $('#byself-tab').toggle(!isCourier);

            updateTotalValue(isCourier);
        }

        function updateTotalValue(isCourier) {
            tableCourierPriceRow.toggle(isCourier);

            if (isCourier) {
                tableCourierPrice.textContent = courierPrice.toFixed(2);
                tableTotalValue.textContent = (totalValue + courierPrice).toFixed(2);

                console.log(tableTotalValue);
            } else {
                tableTotalValue.textContent = totalValue.toFixed(2);
            }
        }
    </script>
}