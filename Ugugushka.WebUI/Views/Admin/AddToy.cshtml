@model AddToyViewModel
@{
    ViewBag.Title = "Управление - Добавить товар";
}

@section Css
{
    <link rel="stylesheet" href="~/css/loader.css"/>
}

<div class="my-5">
        <h2>Добавить товар</h2>
        @using (Html.BeginForm("AddToy", "Admin", FormMethod.Post, htmlAttributes: new { @enctype = "multipart/form-data", @id = "form" }))
        {
            @Html.HiddenFor(x => x.Id)
            @foreach (var property in ViewData.ModelMetadata.Properties)
            {
                if (property.PropertyName != "Id" && 
                    property.PropertyName != "Images" && 
                    property.PropertyName != "Cloudinary" &&
                    property.PropertyName != "CategoryId")
                {
                    <div class="form-group">
                        <label class="d-block mb-3" for="@property.PropertyName">@(property.DisplayName ?? property.PropertyName)</label>
                        @if (property.PropertyName == "Description")
                        {
                            @Html.TextArea(property.PropertyName, null, new { rows = 5, @class = "form-control text-input", @placeholder = property.DisplayName })
                        }
                        else if (property.PropertyName == "IsOnStock")
                        {
                            @Html.CheckBox(property.PropertyName)
                        }
                        else
                        {
                            @Html.TextBox(property.PropertyName, null, htmlAttributes: new { @class = "form-control text-input", @placeholder = property.DisplayName })
                        }
                        @Html.ValidationMessage(property.PropertyName)
                    </div>
                }
            }

            <div class="form-group">
                <label class="d-block mb-3">Фотографии</label>
                <div class="d-flex align-items-center">
                    <div class="d-flex" id="images"></div>
                    <label id="upload_btn" class="d-flex btn-upload-img" for="image">
                        <div id="plus_icon" class="d-flex upload-icon justify-content-center align-items-center">
                            <i class="fas fa-plus"></i>
                        </div>
                        <div id="loader" class="loader" style="display: none;"></div>
                    </label>
                    <input hidden type="file" name="image" id="image" accept="image/png, image/jpeg"/>
                </div>
                <div id="upload_error_block" class="field-validation-error" style="display: none;"></div>
                @Html.ValidationMessageFor(x => x.Images)
            </div>

            <input type="submit" class="btn btn-primary" value="Сохранить" />
            @Html.ActionLink("Назад", "Toys", null, htmlAttributes: new { @class = "btn btn-primary" })

            <div id="img_data"></div>
        }
    </div>

@section PageScripts
{
    <script src="~/libs/jquery/jquery.min.js" type="text/javascript"></script>
    <script src="~/libs/jquery-validate/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/libs/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
    <script>
        // Razor JS variables initialization
        const cloudPath = '@Model.Cloudinary.Api.UrlImgUp.BuildUrl()';
        var imgArray = [
            @foreach (var img in Model.Images)
            {
                @: { publicId: '@img.PublicId', format: '@img.Format' },
            }
        ];
        var isUploadBtnHided = false;

        // DOM Elements
        const imgInputBlock = $('#img_data');
        const imgBlock = $("#images");
        const loader = $("#loader");
        const plusIcon = $("#plus_icon");
        const uploadBtn = $("#upload_btn");
        const uploadErrorBlock = $('#upload_error_block');

        $(document).ready(function() {
            updateImageArray();
            updateInputArray();
        });

        $("#image").on("change",
            function(e) {
                uploadImage();
            });

        function toggleUploading() {
            loader.toggle();
            loader.toggleClass('d-flex');
            plusIcon.toggle();
            plusIcon.toggleClass('d-flex');
        }

        function updateUploadBtn() {
            if (imgArray.length === 5 && !isUploadBtnHided) {
                uploadBtn.toggleClass('d-flex');
                uploadBtn.toggleClass('collapse');
                isUploadBtnHided = !isUploadBtnHided;
            } else if (imgArray.length < 5 && isUploadBtnHided) {
                uploadBtn.toggleClass('d-flex');
                uploadBtn.toggleClass('collapse');
                isUploadBtnHided = !isUploadBtnHided;
            }
        }

        function updateInputArray() {
            // Update input array
            imgInputBlock.html('');
            imgArray.forEach(function(item, index) {
                appendImageInput(item.publicId, item.format, index);
            });
        }

        function updateImageArray() {
            imgBlock.html('');
            imgArray.forEach(function(item, index) {
                appendImage(item.publicId, item.format, index);
            });
        }

        function appendImage(publicId, format, index) {
            const div = $("<div class='img-preview'></div>")
                .attr('data-index', index)
                .on('click', deleteImage)
            $("<img class='d-flex mr-2' height='130' width='130'/>")
                .attr('src', `${cloudPath}/${publicId}.${format}`)
                .appendTo(div);
            div.appendTo(imgBlock);
        }

        function appendImageInput(publicId, format, index) {
            $(`<input type='hidden' name='Images[${index}].Format' id='Images[${index}]_Format'/>`)
                .val(format)
                .appendTo(imgInputBlock);
            $(`<input type='hidden' name='Images[${index}].PublicId' id='Images[${index}]_PublicId'/>`)
                .val(publicId)
                .appendTo(imgInputBlock);
        }

        function deleteImage(e) {
            e.target.remove();
            imgArray.splice(e.target.dataset.index, 1);
            updateInputArray();
            updateUploadBtn();
        }

        function onUploadError(e) {
            toggleUploading();
            uploadErrorBlock.toggle(true);
            uploadErrorBlock.text("Некорректное изображение либо размер картинки превышает 10,49 Mb!");
        }

        $('img.load-preview').on('click', deleteImage);

        function uploadImage() {
            var files = $("#image")[0].files;
            if (files) {
                toggleUploading();
                const form = new FormData();
                form.append("image", files[0]);

                fetch('@Url.Action("UploadImages", "Image")',
                        {
                            method: 'POST',
                            body: form
                        })
                    .then(r => {
                        if (r.ok) {
                            r.json().then(r => {
                                appendImage(r.publicId, r.format, imgArray.length);
                                appendImageInput(r.publicId, r.format, imgArray.length);
                                imgArray.push({ publicId: r.publicId, format: r.format });
                                toggleUploading();
                                updateUploadBtn();
                                uploadErrorBlock.toggle(false);
                            });
                        } else {
                            onUploadError(r.error);
                        }
                    }).catch(onUploadError);
            }
        }
    </script>
}
